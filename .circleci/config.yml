# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    branches:
      only:
        - master
        - develop
    working_directory: ~/lib
    docker:
      # specify the version you desire here
      - image: circleci/android:api-25-alpha

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "lib/build.gradle" }}

      - run:
          name: update android sdk
          command: |
              echo y | android update sdk --no-ui --all --filter tool,extra-android-m2repository,extra-google-google_play_services,extra-google-m2repository,android-25
              echo y | android update sdk --no-ui --all --filter build-tools-25.0.0
      - run:
          name: gradle dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths: ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "lib/build.gradle" }}

      # run unit tests!
      - run:
          name: unit test
          command: |
              ./gradlew test
              ./gradlew lint test

      - run:
          name: Show list of system-images
          command: sdkmanager --list --verbose | grep system-images

      - run:
          name: Setup Emulator
          command: sdkmanager "system-images;android-25;google_apis;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-25;google_apis;armeabi-v7a"

      - run:
          name: Launch Emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
          background: true

      - run:
          name: Wait emulator
          command: circle-android wait-for-boot

      - run:
          name: Run UI test
          command: ./gradlew connectedAndroidTest

      - store_test_results:
          path: lib/build/test-results

      - store_artifacts:
          path: lib/build/reports
          destination: reports